apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo
spec:
  selector:
    matchLabels:
      app: app-server
  replicas: 1
  template:
    metadata:
      labels:
        app: app-server
    spec:
      containers:
        - name: mongo
          image: mongo:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 27017
          volumeMounts:
            - name: data
              mountPath: /data
              readOnly: false
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: mongo-data


---



apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongo-data
  labels:
    app: app-server
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi



---



apiVersion: v1
kind: Service
metadata:
  name: mongo
  labels:
    app: app-server
spec:
  ports:
    - name: mogno
      port: 27017
      targetPort: 27017
  type: NodePort
  selector:
    app: app-server



---


apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-server
spec:
  selector:
    matchLabels:
      app: app-server
  replicas: 1
  template:
    metadata:
      labels:
        app: app-server
    spec:
      containers:
        - name: app-server
          image: app-server:new
          imagePullPolicy: Never
          ports:
            - containerPort: 8080
          volumeMounts:
            - name: data
              mountPath: /data
              readOnly: false
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: mongo-data


---


apiVersion: v1
kind: Service
metadata:
  name: app-server
spec:
  type: LoadBalancer
  ports:
    protocol: TCP
    port: 80
    targetPort: 8080
    name: http
  selector:
    app: app-server
